# Build stage
FROM --platform=linux/amd64 node:18-alpine AS builder
# Install Python and build dependencies for SQL Server
RUN apk add --no-cache python3 make g++ unixodbc-dev curl gnupg

RUN apk update && apk add ca-certificates && update-ca-certificates
# Install Microsoft ODBC Driver
RUN curl -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_17.10.4.1-1_amd64.apk && \
    apk add --allow-untrusted msodbcsql17_17.10.4.1-1_amd64.apk && \
    rm msodbcsql17_17.10.4.1-1_amd64.apk

WORKDIR /usr/src/app

# Install dependencies first for better caching
COPY package*.json ./
RUN npm ci 

# Copy all files except those in .dockerignore
COPY . .

# Production stage
FROM --platform=linux/amd64 node:18-alpine
RUN apk add --no-cache \
    python3 \
    curl \
    unixodbc-dev \
    && rm -rf /var/cache/apk/*

RUN apk update && apk add ca-certificates && update-ca-certificates
# Install Microsoft ODBC Driver
RUN curl -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_17.10.4.1-1_amd64.apk && \
    apk add --allow-untrusted msodbcsql17_17.10.4.1-1_amd64.apk && \
    rm msodbcsql17_17.10.4.1-1_amd64.apk

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /usr/src/app

# Copy built node_modules from builder
COPY --from=builder --chown=appuser:appgroup /usr/src/app/node_modules ./node_modules

# Copy application files
COPY --chown=appuser:appgroup . .

# Environment variables
ENV NODE_ENV=production \
    PORT=5001 \
    NPM_CONFIG_LOGLEVEL=error \
    SECURITY_HEADERS="true" \
    STRICT_TRANSPORT_SECURITY="max-age=31536000; includeSubDomains" \
    X_FRAME_OPTIONS="DENY" \
    X_CONTENT_TYPE_OPTIONS="nosniff" \
    REFERRER_POLICY="strict-origin-when-cross-origin" \
    X_PERMITTED_CROSS_DOMAIN_POLICIES="none" \
    X_XSS_PROTECTION="1; mode=block"

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Entrypoint configuration - MOVE THIS BEFORE USER SWITCH
COPY docker-entrypoint.sh /usr/local/bin/
RUN sed -i 's/\r$//' /usr/local/bin/docker-entrypoint.sh && chmod +x /usr/local/bin/docker-entrypoint.sh

# Switch to non-root user
USER appuser
EXPOSE 5001

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["node", "server.js"]
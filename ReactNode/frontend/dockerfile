# Build stage
FROM node:18-alpine AS builder
WORKDIR /app

# Install dependencies first for better caching
COPY package*.json ./
RUN npm ci --omit=dev && \
    npm cache clean --force

COPY . .

ARG REACT_APP_BACKEND_URL=https://shepherd-backend.azure-api.net
ENV REACT_APP_BACKEND_URL=$REACT_APP_BACKEND_URL \
    NODE_ENV=production \
    GENERATE_SOURCEMAP=false

RUN npm run build

# Production stage
FROM nginx:alpine

# Security updates and user setup in single layer
RUN apk --no-cache upgrade && \
    addgroup -S appgroup && adduser -S appuser -G appgroup && \
    mkdir -p /var/cache/nginx && \
    touch /var/run/nginx.pid

# Copy configurations and build artifacts
COPY --from=builder --chown=appuser:appgroup /app/build /usr/share/nginx/html
COPY --chown=appuser:appgroup nginx.conf /etc/nginx/nginx.conf
COPY --chown=appuser:appgroup nginx-security.conf /etc/nginx/conf.d/security.conf
COPY --chown=appuser:appgroup default.conf /etc/nginx/conf.d/default.conf

# Validate and set permissions
RUN nginx -t && \
    chown -R appuser:appgroup /var/cache/nginx /var/log/nginx /etc/nginx /usr/share/nginx/html /var/run/nginx.pid && \
    chmod -R 755 /var/cache/nginx /var/log/nginx /etc/nginx /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
    CMD curl -f http://localhost:3000 || exit 1

USER appuser
EXPOSE 3000
CMD ["nginx", "-g", "daemon off;"]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
  labels:
    app: sqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      securityContext:
        fsGroup: 10001  # Ensures volume is writable by group 10001
      initContainers:
      - name: volume-permission-fix
        image: busybox:1.35
        command: ['sh', '-c', 'chmod -R 775 /var/opt/mssql && ls -la /var/opt/mssql']
        securityContext:
          runAsUser: 0  # Temporary root access for permission fixes
        volumeMounts:
        - name: mssql-data
          mountPath: /var/opt/mssql
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server:2019-CU16-ubuntu-20.04
        ports:
        - containerPort: 1433
        envFrom:
        - configMapRef:
            name: sqlserver-configmap
        - secretRef:
            name: sqlserver-secret
        env:
        - name: MSSQL_UID  # Explicit user ID
          value: "10001"
        - name: MSSQL_GID  # Explicit group ID
          value: "10001"
        securityContext:
          runAsUser: 10001
          runAsGroup: 10001
        volumeMounts:
        - name: mssql-data
          mountPath: /var/opt/mssql
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          tcpSocket:
            port: 1433
          initialDelaySeconds: 60
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 1433
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: mssql-data
        persistentVolumeClaim:
          claimName: sqlserver-pvc
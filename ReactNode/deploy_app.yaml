---
- name: Deploy React-Node App with SQL Server
  hosts: localhost
  vars:
    kubeconfig_path: "/home/aaht14/.kube/config"
    DB_PASSWORD: "{{ lookup('env', 'DB_PASSWORD') }}"  # Secure password handling
  tasks:

    # ✅ Apply ConfigMap and Secrets
    - name: Apply Kubernetes ConfigMap
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/configmap.yaml

    - name: Apply Kubernetes Secrets
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/secret.yaml

    # ✅ Deploy SQL Server
    - name: Apply SQL Server PVC
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        namespace: default
        src: k8s/sqlserver-pvc.yaml

    - name: Deploy SQL Server
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        namespace: default
        src: k8s/sqlserver-deployment.yaml

    # ✅ Improved SQL Readiness Check
    - name: Wait for SQL Server to accept connections
      shell: |
        kubectl exec deploy/sqlserver -- /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "{{ DB_PASSWORD }}" -Q "SELECT 1"
      register: sql_ready
      retries: 10
      delay: 10
      until: sql_ready.rc == 0
      ignore_errors: yes

    # ✅ Deploy Backend and Frontend Services
    - name: Deploy Backend Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/backend-deployment.yaml

    - name: Deploy Frontend Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/frontend-deployment.yaml

    # ✅ Verify Deployments
    - name: Wait for all pods to be ready
      command: kubectl get pods
      register: pod_status
    - debug:
        msg: "{{ pod_status.stdout_lines }}"

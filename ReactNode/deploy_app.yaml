---
- name: Deploy React-Node App with SQL Server
  hosts: localhost
  vars:
    kubeconfig_path: "/home/aaht14/.kube/config"
    sql_timeout: 30  # Increased timeout to 3 minutes
  tasks:

    # Clean up previous SQL Server deployment first
    - name: Delete old SQL Server deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Deployment
        name: sqlserver
        namespace: default
        state: absent
      ignore_errors: yes
      changed_when: false  # Don't fail if not exists

    - name: Wait for old pods to terminate
      command: kubectl wait --for=delete pod -l app=sqlserver --timeout=60s
      ignore_errors: yes
      register: pod_termination
      changed_when: "'error: no matching resources found' not in pod_termination.stderr"

    - name: Delete old Backend deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Deployment
        name: backend
        namespace: default
        state: absent
      ignore_errors: yes

    - name: Wait for old Backend pods to terminate
      command: kubectl wait --for=delete pod -l app=backend --timeout=60s
      ignore_errors: yes


    - name: Delete old Frontend deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Deployment
        name: frontend
        namespace: default
        state: absent
      ignore_errors: yes

    - name: Wait for old Frontend pods to terminate
      command: kubectl wait --for=delete pod -l app=frontend --timeout=60s
      ignore_errors: yes

    # ✅ Apply Configurations
    - name: Apply Kubernetes ConfigMap
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/configmap.yaml

    - name: Apply Kubernetes Secrets
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/secret.yaml

    - name: Apply SQL Server ConfigMap
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/sqlserver-configmap.yaml

    - name: Apply SQL Server Secrets
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/sqlserver-secret.yaml

    # ✅ Deploy SQL Server
    - name: Apply SQL Server PVC
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        namespace: default
        src: k8s/sqlserver-pvc.yaml

    - name: Deploy SQL Server
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        namespace: default
        src: k8s/sqlserver-deployment.yaml

    - name: Wait for SQL Server Pod to be Ready
      command: kubectl wait --for=condition=ready pod -l app=sqlserver --timeout={{ sql_timeout }}s
      register: sql_ready
      retries: 3
      delay: 10
      until: sql_ready.rc == 0
      ignore_errors: yes

    # ✅ Deploy Backend and Frontend Services
    - name: Deploy Backend Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/backend-deployment.yaml

    - name: Deploy Frontend Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/frontend-deployment.yaml

    # ✅ Final Verification
    - name: Wait for all pods to be ready
       command: kubectl get pods
       register: pod_status
     - debug:
         msg: "{{ pod_status.stdout_lines }}"
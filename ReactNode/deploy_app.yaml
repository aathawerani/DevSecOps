- name: Deploy React-Node App with SQL Server
  hosts: localhost
  tasks:

    # 🟢 Apply Kubernetes ConfigMap
    - name: Apply Kubernetes ConfigMap (Environment Variables)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/configmap.yaml

    # 🟢 Apply Kubernetes Secrets
    - name: Apply Kubernetes Secrets
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/secret.yaml

    # 🟢 Apply Persistent Volume Claim (PVC) for SQL Server
    - name: Apply SQL Server Persistent Volume Claim (PVC)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/sqlserver-pvc.yaml

    # 🟢 Deploy SQL Server
    - name: Deploy SQL Server
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/sqlserver-deployment.yaml

    # ⏳ Wait for SQL Server Pod to be Ready
    - name: Wait for SQL Server to be Ready
      command: kubectl wait --for=condition=ready pod -l app=sqlserver --timeout=120s
      register: sql_ready
      retries: 5
      delay: 10
      until: sql_ready.rc == 0

    # 🟢 Copy SQL Initialization Script to the Kubernetes Pod
    - name: Copy SQL Init Script to Kubernetes Pod
      copy:
        src: init.sql
        dest: /tmp/init.sql

    # 🟢 Execute SQL Initialization Script
    - name: Execute SQL Initialization Script
      command: kubectl exec deploy/sqlserver -- /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "{{ DB_PASSWORD }}" -i /tmp/init.sql
      ignore_errors: yes

    # 🟢 Deploy Backend Service
    - name: Deploy Backend Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/backend-deployment.yaml

    # 🟢 Deploy Frontend Service
    - name: Deploy Frontend Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: k8s/frontend-deployment.yaml

    # ✅ Verify All Deployments
    - name: Wait for all pods to be ready
      command: kubectl get pods
      register: pod_status
    - debug:
        msg: "{{ pod_status.stdout_lines }}"
